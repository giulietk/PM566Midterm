---
title: "Midterm"
author: "Giuliet Kibler"
format: 
 html: 
    embed-resources: true
editor: visual
---

# Introduction

The National Health and Nutrition Examination Survey is a survey, typically conducted over a two-year period, to estimate the dietary intake over the 24-hour period prior to the interview of Americans 1 year or older. This particular dataset is a combination of data collected in the 2017-2018 cycle and 2019-March 2020 since the NHANES program was suspended in March of 2020 due to the COVID-19 pandemic. The dietary interview component of this survey is called "What We Eat in America" (WWEIA) and data is collected using the USDA's Automated Multiple Pass Method (AMPM). All participants are eligible for two survey interviews, the first of which is recorded in person at the Mobile Examination Center, and the second is conducted over the phone 3 to 10 days later. This data set includes dietary information from the first interview and is a log of the total energy and nutrient intakes from foods and beverages within the previous 24-hours. Of particular interest in this dataset is the relationship between pre-pandemic macronutrient dietary intention and true intake. Additionally, there is interest in assessing the relationship between dietary intake and the B vitamins intake. B vitamins are cofactors for many cellular pathways, including cellular metabolism and synthesis of DNA and RNA, but are not stored by the body, so it is critical to replenish them daily through foods and supplements (Hanna et al, 2022). Therefore, this analysis is to assess if Americans 1 year or older are eating their intended macronutrient diet and if their intake is associated with B vitamin levels pre-pandemic.

# Methods

The P_DR1TOT dataset for 2017-March 2020 was downloaded from the CDC's NHANES records of dietary data. This is a dataset from the WWEIA day 1 interviews, conducted pre-pandemic, and includes total dietary intake of participants.

Data variables of interest include 6 variables of special diets, referred to here as intended diet, 5 energy (caloric) and macronutrient variables, and B vitamins 1, 2, and 6. These variables were extracted from the dataset and relabeled to be more informative. 12 intended diets were recorded in separate variables as numbers 1-12 for yes to that diet or missing for no. These variables were altered to 1 for yes and 0 for no. Since low calorie and high calorie diets are labeled separately, a new variable for diet was created where low calorie is 0, high calorie is 1, and neither is 2.

Correlation between intended diet and dietary intake was assessed using summary statistics and box plots.

The proportion of participants below the recommended B vitamins intake levels for men were reported. Correlation between dietary intake, as well as caloric diet type, and B vitamin levels was assessed using scatter plots and linear fitted models.

```{r, echo=FALSE, message=FALSE, warning=FALSE}
# Open necessary packages
library(haven)
library(dplyr)
library(ggplot2)
library(knitr)
library(gridExtra)
library(tidyr)
```

## Data Wrangling & EDA

```{r}
# Read in table and check
data <- read_xpt("P_DR1TOT.XPT")
head(data)
tail(data)
dim(data)
sapply(data, class)

# Impute multiple columns at once
data_avgs <- data |>
  summarise(
    median_cal = median(DR1TKCAL, na.rm = TRUE),
    median_sug = median(DR1TSUGR, na.rm = TRUE),
    median_carb = median(DR1TCARB, na.rm = TRUE),
    median_fat = median(DR1TTFAT, na.rm = TRUE),
    median_pro = median(DR1TPROT, na.rm = TRUE),
    median_B1 = median(DR1TVB1, na.rm = TRUE),
    median_B2 = median(DR1TVB2, na.rm = TRUE),
    median_B6 = median(DR1TVB6, na.rm = TRUE))
print(data_avgs)

# Create categorical variables
high_low <- data |>
  mutate(
    cat_Calories = ifelse(DR1TKCAL > as.numeric(data_avgs['median_cal']), 1, 0),
    cat_Sugar = ifelse(DR1TSUGR > as.numeric(data_avgs['median_sug']),1, 0),
    cat_Carbohydrate = ifelse(DR1TCARB > as.numeric(data_avgs['median_carb']), 1, 0),
    cat_Fat = ifelse(DR1TTFAT > as.numeric(data_avgs['median_fat']), 1, 0),
    cat_Protein = ifelse(DR1TPROT > as.numeric(data_avgs['median_pro']), 1, 0)
  ) |>
  select(starts_with("cat_"))  # Keep only the categorical columns
print(high_low)
```

```{r, echo=FALSE}
# Extract data to answer questions
extracted_data <- data |>
  select(DR1TKCAL, DRQSDT1, DRQSDT8, DR1TSUGR, DRQSDT4, DR1TCARB, DRQSDT9, DR1TTFAT, DRQSDT2, DR1TPROT, DRQSDT10, DR1TVB1, DR1TVB2, DR1TVB6) |>
  rename(
    Calories = DR1TKCAL,
    Low_Calorie = DRQSDT1, # Low cal diet
    High_Calorie = DRQSDT8, # Weight gain diet
    Sugar = DR1TSUGR,
    Low_Sugar = DRQSDT4, # Low sugar diet
    Carbohydrate = DR1TCARB,
    Low_Carbohydrate = DRQSDT9, # Low carb diet
    Fat = DR1TTFAT,
    Low_Fat = DRQSDT2, # Low fat diet
    Protein = DR1TPROT,
    High_Protein = DRQSDT10, # High Protein diet
    # Vitamin Bs
    B1 = DR1TVB1, # Vitamin B1
    B2 = DR1TVB2, # Vitamin B2
    B6 = DR1TVB6 # Vitamin B6
  )

# Edit dietary output
extracted_data[c("Low_Calorie", "High_Calorie", "Low_Sugar", "Low_Carbohydrate", "Low_Fat", "High_Protein")] <- 
  lapply(extracted_data[c("Low_Calorie", "High_Calorie", "Low_Sugar", "Low_Carbohydrate", "Low_Fat", "High_Protein")], function(x) {
    x[is.na(x)] <- 0 # Replace NA values with 0
    x[x != 0] <- 1 # Replace values other than 0 with 1
    return(x)
  })

# Make a new variable for diet type
extracted_data <- extracted_data |>
  mutate(Calorie_diet = case_when(
    Low_Calorie == 1 ~ 0,
    High_Calorie == 1 ~ 1,
    TRUE ~ 2  # Assign NA if neither condition is met
  ))
print(c("Head of Categorization of Diet Type (0 = Low Calorie, 1 = High Calorie and 2 = No Caloric Diet)"))
head(extracted_data$Calorie_diet)
```

```{r}
# Summary of Extracted Data
head(extracted_data)
tail(extracted_data)
dim(extracted_data)
sapply(extracted_data, class)
```

Are macronutrient diet types related to the categorical variables?
Ideally, all 1 values = 1
```{r, echo=FALSE, warning=FALSE}
# Check if both data frames have the same number of rows
if (nrow(extracted_data) == nrow(high_low)) {
  combined_data <- data.frame(
    Low_Sugar = extracted_data$Low_Sugar,
    cat_Sugar = high_low$cat_Sugar,
    Low_Carbohydrate = extracted_data$Low_Carbohydrate,
    cat_Carbohydrate = high_low$cat_Carbohydrate,
    Low_Fat = extracted_data$Low_Fat,
    cat_Fat = high_low$cat_Fat,
    High_Protein = extracted_data$High_Protein,
    cat_Protein = high_low$cat_Protein
  )
} else {
  stop("The data frames have different numbers of rows and cannot be combined.")
}

# Create pairs for plotting
pairs <- list(
  c("Low_Sugar", "cat_Sugar"),
  c("Low_Carbohydrate", "cat_Carbohydrate"),
  c("Low_Fat", "cat_Fat"),
  c("High_Protein", "cat_Protein")
)

# Loop through pairs of variables to create plots
for (pair in pairs) {
  plot <- ggplot(combined_data, aes_string(x = pair[1], y = pair[2])) +
    geom_jitter(width = 0.1, height = 0.1, alpha = 0.7) +
    labs(title = paste("Scatterplot of", pair[1], "vs", pair[2]),
         x = pair[1],
         y = pair[2]) +
    theme_minimal()
  
  print(plot)
}
```
Some people on a macronutrient diet are not eating ingesting their diet plan when compared to the overall median; further investigation below.

# Preliminary Results

## Investigate correlation between intended diet and dietary intake

```{r, echo=FALSE, warning=FALSE}
# Function for summary statistics and plotting
create_summary_plot <- function(data, cat_var, cont_var) {
  # Convert the categorical variable to a factor
  data[[cat_var]] <- as.factor(data[[cat_var]])
  filtered_data <- data |> filter(is.finite(!!sym(cont_var)))

  # Create the box plot with color based on the categorical variable
  box_plot <- ggplot(filtered_data, aes_string(x = cat_var, y = cont_var, fill = cat_var)) +
    geom_boxplot() +
    labs(x = paste(cat_var, "(yes/no)"), y = cont_var) +
    ggtitle(paste("Box Plot of", cont_var, "by", cat_var)) +
    theme_minimal() +
    scale_fill_manual(values = c("lightblue", "lightgreen")) +
    theme(legend.position = "none")

  # Create the summary table
  summary_table <- data |>
    group_by(!!sym(cat_var)) |>
    summarize(
      Mean = mean(!!sym(cont_var), na.rm = TRUE),
      Median = median(!!sym(cont_var), na.rm = TRUE),
      Min = min(!!sym(cont_var), na.rm = TRUE),
      Max = max(!!sym(cont_var), na.rm = TRUE),
      Count = n(),
      .groups = 'drop'
    )

  # Return the plot and summary table separately
  return(list(plot = box_plot, summary_table = summary_table))
}

# Create lists to hold the plots and individual summaries
plots <- list()
summaries <- list()

# Generate box plots and individual summary tables for nutrients
result_sugar <- create_summary_plot(extracted_data, "Low_Sugar", "Sugar")
plots[[1]] <- result_sugar$plot
summaries[[1]] <- result_sugar$summary_table
print(c("Summary of Sugar Intake"))
print(kable(result_sugar$summary_table))

result_carb <- create_summary_plot(extracted_data, "Low_Carbohydrate", "Carbohydrate")
plots[[2]] <- result_carb$plot
summaries[[2]] <- result_carb$summary_table
print(c("Summary of Carbohydrate Intake"))
print(kable(result_carb$summary_table))

result_fat <- create_summary_plot(extracted_data, "Low_Fat", "Fat")
plots[[3]] <- result_fat$plot
summaries[[3]] <- result_fat$summary_table
print(c("Summary of Fat Intake"))
print(kable(result_fat$summary_table))

result_pro <- create_summary_plot(extracted_data, "High_Protein", "Protein")
plots[[4]] <- result_pro$plot
summaries[[4]] <- result_pro$summary_table
print(c("Summary of Protein Intake"))
print(kable(result_pro$summary_table))

# Print boxplots
grid.arrange(grobs = plots, ncol = 2) 
```

Summary Table for Caloric Diets

```{r, echo=FALSE, warning=FALSE}
# Summary statistics for caloric diets
diet_summary_stats <- extracted_data |>
  group_by(Calorie_diet) |>  # Group by the diet variable
  summarize(
    Mean = mean(Calories, na.rm = TRUE),
    Median = median(Calories, na.rm = TRUE),
    Min = min(Calories, na.rm = TRUE),
    Max = max(Calories, na.rm = TRUE),
    Count = n(),
    .groups = 'drop'
  )
print(kable(diet_summary_stats))

# Create the box plot for caloric diets
plot <- ggplot(na.omit(extracted_data), aes(x = factor(Calorie_diet), y = Calories, fill = factor(Calorie_diet))) +
  geom_boxplot(alpha = 0.7) +
  labs(x = "Diet Type", y = "Calories", title = "Calories by Diet Type") +
  scale_x_discrete(labels = c("0" = "Low Calorie Diet", "1" = "High Calorie Diet", "2" = "Neither")) +
  scale_fill_manual(values = c("lightblue", "lightgreen", "salmon")) +
  theme_minimal() +
  theme(legend.title = element_blank())

# Print the caloric diet box plot
print(plot)
```

## Investigate correlations between dietary intake and B vitamins

Proportion of Participants Below B Vitamin Recommended Intake for Men (Hanna et al., 2022)

```{r, echo=FALSE}
# Define recommended B vitamin values (Hanna et al.)
recommended_values <- list(
  B1 = 1.2,
  B2 = 1.3,
  B6 = 1
)

# Create a data frame to store proportions
proportions <- data.frame(Vitamin = character(), Proportion_Below = numeric())

# Loop through each vitamin variable
for (vitamin in names(recommended_values)) {
  if (vitamin %in% colnames(extracted_data)) {
    # Calculate the number of people below the recommendation
    below_recommendation <- sum(extracted_data[[vitamin]] < recommended_values[[vitamin]], na.rm = TRUE)
    total_people <- sum(!is.na(extracted_data[[vitamin]]))  # Count of non-missing values
    
    # Calculate the proportion
    proportion <- below_recommendation / total_people
    
    # Store the result
    proportions <- rbind(proportions, data.frame(Vitamin = vitamin, Proportion_Below = proportion))
  } else {
    message(paste("Vitamin variable", vitamin, "not found in the data. Skipping."))
  }
}
print(proportions)
```

Graphing B Vitamins vs Dietary Intake

```{r, message=FALSE, warning=FALSE}
## Individual plots are made because it looks better
create_scatter_plots <- function(data) {
  # List of nutrient variables to plot
  nutrient_vars <- c("Calories", "Carbohydrate", "Fat", "Protein")
  # List of vitamin variables to plot against
  vitamin_vars <- c("B1", "B2", "B6")
  
  # Define recommended values for B vitamins
  recommended_values <- list(
    B1 = 1.2,
    B2 = 1.3,
    B6 = 1
  )
  
  # Loop through each nutrient variable
  for (nutrient in nutrient_vars) {
    # Check if the nutrient exists in the data
    if (!nutrient %in% colnames(data)) {
      message(paste("Nutrient variable", nutrient, "not found in the data. Skipping."))
      next
    }
    
    # Loop through each vitamin variable
    for (vitamin in vitamin_vars) {
      # Check if vitamin exists in the data
      if (vitamin %in% colnames(data)) {
        # Prepare the data for modeling
        temp_data <- data[, c(nutrient, vitamin)]
        colnames(temp_data) <- c("Nutrient", "Vitamin")
        
        # Filter out missing and non-finite values
        temp_data <- temp_data |>
          na.omit() |>
          filter(is.finite(Nutrient) & is.finite(Vitamin))
        
        # Check if there are enough data points for modeling
        if (nrow(temp_data) > 1) {
          # Calculate the linear model and R^2
          model <- lm(Vitamin ~ Nutrient, data = temp_data)
          r_squared <- summary(model)$r.squared
          
          # Create the scatter plot with line of best fit
          scatter_plot <- ggplot(temp_data, aes(x = Nutrient, y = Vitamin)) +
            geom_point() +
            geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Line of best fit
            labs(x = nutrient, y = vitamin) +
            theme_minimal() +
            ggtitle(paste("Scatter Plot of", vitamin, "vs", nutrient, "\nR² =", round(r_squared, 3)))
          
          # Add horizontal lines for recommended values
          scatter_plot <- scatter_plot +
            geom_hline(yintercept = recommended_values[[vitamin]], linetype = "dashed", color = "red", linewidth = 0.7) +
            annotate("text", x = max(temp_data$Nutrient, na.rm = TRUE), y = recommended_values[[vitamin]], 
                     label = "Men's Recommended Dietary Intake", vjust = -0.5, color = "red")
          
          # Print the scatter plot
          print(scatter_plot)
        } else {
          message(paste("Not enough data points for", vitamin, "vs", nutrient))
        }
      } else {
        message(paste("Vitamin variable", vitamin, "not found in the data. Skipping."))
      }
    }
  }
}

# Call the function with the data
create_scatter_plots(extracted_data)
```

Caloric Diet's Effect on B vitamins

```{r, echo=FALSE, message=FALSE, warning=FALSE}
# Prepare the data for plotting
library(ggplot2)

# Prepare the data for plotting
plot_data <- extracted_data[, c("Calories", "B1", "B2", "B6", "Low_Calorie", "High_Calorie", "Low_Sugar", "Low_Carbohydrate", "Low_Fat", "High_Protein")]

# Create a new column for DietType based on the diet indicators
plot_data$DietType <- 2  # Default to 2 (No Diet)

# Assign values for DietType based on conditions
plot_data$DietType[plot_data$Low_Calorie == 1] <- 0
plot_data$DietType[plot_data$High_Calorie == 1] <- 1

# Convert DietType to a factor
plot_data$DietType <- factor(plot_data$DietType, levels = c(0, 1, 2), labels = c("Low Diet", "High Diet", "No Diet"))

# Filter out missing values
plot_data <- na.omit(plot_data)

# List of vitamins to plot against Calories
vitamin_vars <- c("B1", "B2", "B6")

# Create scatter plots for each vitamin
for (vitamin in vitamin_vars) {
  scatter_plot <- ggplot(plot_data, aes_string(x = "Calories", y = vitamin, color = "DietType")) +
    geom_point() +
    geom_smooth(method = "lm", aes(group = DietType), se = FALSE) +  # Linear model for each diet type
    labs(x = "Calories", y = paste("Vitamin", vitamin, "(mg)"), title = paste("Scatter Plot of Calories vs Vitamin", vitamin, "by Diet Type")) +
    theme_minimal() +
    scale_color_manual(values = c("red", "blue", "grey"))

   # Color mapping for R² text
  color_map <- c("Low Diet" = "red", "High Diet" = "blue", "No Diet" = "gray")
  
  # Calculate and display R² values
  for (diet in levels(plot_data$DietType)) {
    # Fit the model for each diet type
    model <- lm(as.formula(paste(vitamin, "~ Calories")), data = plot_data[plot_data$DietType == diet, ])
    r_squared <- summary(model)$r.squared
    
    # Position for the text annotation based on diet type
    if (diet == "Low Diet") {
      y_pos <- max(plot_data[[vitamin]], na.rm = TRUE) * 0.9
    } else if (diet == "High Diet") {
      y_pos <- max(plot_data[[vitamin]], na.rm = TRUE) * 0.8
    } else {  # "No Diet"
      y_pos <- max(plot_data[[vitamin]], na.rm = TRUE) * 0.7
    }
    
    # Add the R² value to the plot with color coding
    scatter_plot <- scatter_plot +
      annotate("text", x = max(plot_data$Calories, na.rm = TRUE) * 0.9, y = y_pos, 
               label = paste("R² =", round(r_squared, 3)), 
               color = color_map[diet],  # Use the color map for text color
               hjust = 1, vjust = 1)
  }
  print(scatter_plot)
}
```

# Conclusion

Overall, the average of pre-pandemic participants' intended diets is associated with their true intake. All mean values for intake are right skewed by high outliers, so medians were assessed. The low sugar group averaged lower total sugars than those not on the diet (62.24 vs 90.89 g). Additionally, the low carbohydrate group ate less carbohydrates than those not on this diet (165.395 vs 219.08 g). On the other hand, those on a low fat diet ate more fats than those not on the diet (72.62 vs 71.805 g), meaning the average participant on a low fat diet did not eat less fats than other participants. The average high protein diet had substantially more protein intake than those not on the diet (100.61 vs 64.72 g). Finally, the average high calorie diet included substantially higher caloric intake than either the low calorie diet or those not on a caloric diet (2528 vs 1834 and 1821 cals), but the low calorie diet was actually slightly higher than those not on a caloric diet (1834 vs 1821 cals), meaning the average participant on a low calorie diet ate more calories than those not intending to calorically restrict. Although, all IQRs of dietary intake by intended diet are overlapping, so following an intended diet is variable for Americans pre-pandemic. This lack of conclusivity makes since considering dietary needs are relative to a person's physiological demands.

B vitamins have a moderate association with dietary intake. B1 and B2 vitamins are more strongly associated with all of the macronutrient intakes than B6, with the highest correlation occurring between B1 and caloric intake an B1 and carbohydrate intake. This demonstrates that getting enough dietary nutrition is critical for B1 and B2 vitamin daily replenishment. Interestingly, caloric diet type's association with the B vitamins was not consistent between the vitamins, indicating that more than just than dietary intention is necessary for sufficient B vitamin intake. With 43% of participants below the recommended B1 levels guidelines for men, 35% below the guidelines for B2 levels, and 26% below the guidelines for B6 levels, many participants should eat more macronutrients and overall calories to meet the body's B vitamin demands. In conclusion, the average American 1 year or older is eating their intended macronutrient diet and their intake is moderately associated with B vitamin levels pre-pandemic.
